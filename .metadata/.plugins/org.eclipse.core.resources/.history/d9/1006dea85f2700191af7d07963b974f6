package objects;

public class Triangle implements IIntersect{
	public Vector3 p1, p2, p3;
	public Plane plane;
	
	public Triangle(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 colorVec) {
		this.p1 = p1;
		this.p2 = p2;
		this.p3 = p3;
		plane = new Plane(p1, Vector3.sub(p2, p1), Vector3.sub(p3, p1));
	}
	
	// this method first projects outside onto the plane, and then continues.
	public boolean isInside(Vector3 outside) {
		Vector2 projection = plane.toUV(outside);
		return (projection.x >= 0 && projection.y >= 0 && projection.x+projection.y <= 1);
	}

	@Override
	public Intersection getIntersection(Ray incoming) {
		Intersection inter = plane.getIntersection(incoming);
		// checks to see if it's in the triangle (SUPER INEFFICIENT)
		if(inter != null && isInside(inter.position)) {
//			System.out.print("|"+inter.distance+"|");
			return inter;
		}
		else
			return null;
	}
}
